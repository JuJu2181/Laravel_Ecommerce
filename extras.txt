some additional unwanted codes 
from web.php 
//? to create a new produt
Route::get('/create_product',function(){
    // Product::create(
    //     [
    //         'product_name' => 'Key Boards',
    //         'product_desc' => 'Premium Gaming keyboards',
    //         'price'=>'5000',
    //         'image' => '',
    //     ]
    // );
    // alt way
    $product = new Product;
    $product->product_name = 'mouse';
    $product->product_desc = 'A gaming mouse here';
    $product->price = '1000';
    $product->save();
    return redirect()->route('product.all');
})->name('product.create');
//? to get products from db
Route::get('/get_product',function(){
    $products = Product::get();
    return $products;
});


for category multi level select 
{{-- This method is fine but it is messy and hard to understand --}}
<x-forms.select name="parent_id" class="form-control ">
                        <option value="0"> Select A Category</option>
                        @foreach (App\Models\Category::with('children')->where('parent_id',0)->get() as $category)
                        {{-- only for 3 cats using nesting --}}
                        {{-- @if ($category->children->count() > 0)
                        <option value="{{ $category->id }}" {{ $category->id == old('category_id')?"selected":"" }}>
                        {{ $category->name }}</option>
                        @foreach ($category->children as $subcategory)
                        @if ($subcategory->children->count()>0)
                        <option value="{{ $subcategory->id }}"
                            {{ $subcategory->id == old('category_id')?"selected":"" }}> {!!str_repeat('&nbsp;',4)!!}->
                            {{ $subcategory->name }}</option>
                        @foreach ($subcategory->children as $thirdlevelcategory)
                        <option value="{{ $thirdlevelcategory->id }}"
                            {{ $thirdlevelcategory->id == old('category_id')?"selected":"" }}> {!!str_repeat('&nbsp;',8)!!}->
                            {{ $thirdlevelcategory->name }}</option>
                        @endforeach
                        @else
                        <option value="{{ $subcategory->id }}"
                            {{ $subcategory->id == old('category_id')?"selected":"" }}> {!!str_repeat('&nbsp;',4)!!}->
                            {{ $subcategory->name }}</option>
                        @endif
                        @endforeach
                        @else
                        <option value="{{ $category->id }}" {{ $category->id == old('category_id')?"selected":"" }}>
                            {{ $category->name }}</option>
                        @endif --}}

                        {{ generateCategoryList($category)}}

                        @endforeach

                    </x-forms.select>

## ajax delete in cart.blade.php 
        <script>
            document.getElementById("shop").classList.add("active");
            const decrementBtn = document.getElementById("decrement-btn");
            const incrementBtn = document.getElementById("increment-btn");
            const deleteBtn = document.getElementById('deleteCartItem');
            {{-- function to update the finalPrice --}}
            function updateFinalPrice(){
                let finalPrice = 0;
                $("table > tbody > tr > .total-amount").each(function(){
                    finalPrice += parseInt($(this).text().replace('$',''));
                });
                console.log("Final:"+finalPrice);
                $('#subTotalPrice').text('$'+finalPrice);
                $('#totalPrice').text('$'+finalPrice);
            }

            {{-- function to update view when increment and decrement is pressed --}}
            function incrementCount(id){
                let currentQuantity = parseInt($(`#orderItem${id} .input-number`).val());
                let increasedQuantity = currentQuantity+1;
                let unitPrice = parseInt($(`#orderItem${id} #unitPrice`).text().replace('$',''));
                let updatedPrice = increasedQuantity*unitPrice;
                $(`#orderItem${id} .total-amount`).text('$'+updatedPrice);
                {{-- updating the final prices --}}
                {{-- let subTotalPrice = parseInt($('#subTotalPrice').text().replace('$',''));
                let shippingPrice = parseInt($('#shippingPrice').text().replace('$',''));
                let discountPrice = parseInt($('#discountPrice').text().replace('$',''));
                let totalPrice = parseInt($('#totalPrice').text().replace('$',''));
                let newSubTotalPrice = subTotalPrice + unitPrice;
                let newTotalPrice = newSubTotalPrice + shippingPrice + discountPrice;
                $('#subTotalPrice').text('$'+newSubTotalPrice);
                $('#totalPrice').text('$'+newTotalPrice); --}}
                updateFinalPrice();
            }

            function decrementCount(id){
                let currentQuantity = parseInt($(`#orderItem${id} .input-number`).val());
                let decreasedQuantity = currentQuantity-1;
                let unitPrice = parseInt($(`#orderItem${id} #unitPrice`).text().replace('$',''));
                let updatedPrice = decreasedQuantity*unitPrice;
                $(`#orderItem${id} .total-amount`).text('$'+updatedPrice);
                {{-- updating the final prices --}}
                {{-- let subTotalPrice = parseInt($('#subTotalPrice').text().replace('$',''));
                let shippingPrice = parseInt($('#shippingPrice').text().replace('$',''));
                let discountPrice = parseInt($('#discountPrice').text().replace('$',''));
                let totalPrice = parseInt($('#totalPrice').text().replace('$',''));
                let newSubTotalPrice = subTotalPrice - unitPrice;
                let newTotalPrice = newSubTotalPrice + shippingPrice + discountPrice;
                $('#subTotalPrice').text('$'+newSubTotalPrice);
                $('#totalPrice').text('$'+newTotalPrice); --}}
                updateFinalPrice();
            }



            {{-- function for ajax delete --}}
            function deleteCartItem(id){
                console.log(id);
                let token = $("meta[name='csrf-token']").attr("content");
                if(confirm("Are you sure to remove this item?\n press 'OK' to confirm")){
                $.ajax({
                url:"/cart/"+id,
                type: 'DELETE',
                data:{
                    "id":id,
                    "_token":token,
                },
                success:function(){
                    console.log("deleted");
                    {{-- let totalPriceOfDeletedItem = parseInt($(`#orderItem${id} .total-amount`).text().replace('$',''));
                    let subTotalPrice = parseInt($('#subTotalPrice').text().replace('$',''));
                    let shippingPrice = parseInt($('#shippingPrice').text().replace('$',''));
                    let discountPrice = parseInt($('#discountPrice').text().replace('$',''));
                    let totalPrice = parseInt($('#totalPrice').text().replace('$',''));
                    let newSubTotalPrice = subTotalPrice - totalPriceOfDeletedItem;
                    let newTotalPrice = newSubTotalPrice + shippingPrice + discountPrice;

                    console.log(`Deleted Item Price:${totalPriceOfDeletedItem}\nNew Subtotal: ${newSubTotalPrice}\nNew Total: ${newTotalPrice}`); --}}
                    $('#orderItem'+id).remove();
                    updateFinalPrice();
                    {{-- $('#subTotalPrice').text('$'+newSubTotalPrice);
                    $('#totalPrice').text('$'+newTotalPrice);
                    console.log("Item deleted success"); --}}
                }
                });
            }else{
                console.log("cancelled");
            }
            }
        </script>